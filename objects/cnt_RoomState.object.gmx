<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init

first_room_id = 2;
second_room_id = 4;
teleporters_activate = true;
teleporters = 0;

///Rooms control
room_y = 50;
room_x = 50;

//List which contains coordinates of every room
room_coordinates = ds_grid_create(100, 100);
ds_grid_set_region(room_coordinates, 0, 0, 100, 100, 0);
ds_grid_set(room_coordinates, room_x, room_y, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grid Creation

room_grid = ds_grid_create(room_width / 16, room_height / 16);
ds_grid_set_region(room_grid, 0, 0, room_width / 16, room_height / 16, 0);

with(cnt_Stages) {
    x1 = x / 16;
    x2 = (x + sprite_width) / 16;
    y1 = y / 16;
    y2 = (y + sprite_height) / 16;
    ds_grid_set_region(cnt_RoomState.room_grid, x1, y1, x2, y2, 1);
}
with(cnt_Walkable) {
    x1 = x / 16;
    x2 = (x + sprite_width) / 16;
    y1 = y / 16;
    y2 = (y + sprite_height) / 16;
    ds_grid_set_region(cnt_RoomState.room_grid, x1, y1, x2, y2, -100);
}
with(cnt_NextFloor) {
    x1 = x / 16;
    x2 = (x + sprite_width) / 16;
    y1 = y / 16;
    y2 = (y + sprite_height) / 16;
    ds_grid_set_region(cnt_RoomState.room_grid, x1, y1, x2, y2, 2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
