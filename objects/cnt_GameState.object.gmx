<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize vars

// 0 = teleport to the center
// 1 = teleport to the bottom
// 2 = teleport to the left
// 3 = teleport to the top
// 4 = teleport to the right
teleporters = 0;
teleporters_activate = true;

// Player enable to scale the view
player_scaling_x = 0;
player_scaling_y = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game start
//room_goto_next();
window_set_size(1280, 960);
window_set_min_width(640);
window_set_min_height(480);
//window_set_position(window_get_width() / 2 - 640, window_get_height() / 2 - 480);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///View scaling

//Standart size of the view
original_wview = 320;
original_hview = 240;

//Scale the view relatively to the window size
global.scale = min(floor(window_get_width() / original_wview), round(window_get_height() / original_hview));
global.scale = max(global.scale, 1);

//Set position, height and width of the view
view_wview[0] = round((window_get_width() / global.scale) / 10) * 10 + player_scaling_x;
view_hview[0] = round((window_get_height() / global.scale) / 10) * 10 + player_scaling_y;
view_xview[0] = round((window_get_x() / global.scale) / 10) * 10;
view_yview[0] = round((window_get_y() / global.scale) / 10) * 10;

//Moves the view closer
if(keyboard_check_pressed(vk_pagedown) || mouse_wheel_up()) {
    player_scaling_x = max(player_scaling_x - 40, 0);
    player_scaling_y = player_scaling_x / 4 * 3;
    view_hborder[0] = max(view_hborder[0] - 40, 320);
    view_vborder[0] = view_hborder[0] / 4 * 3;;
    
    show_debug_message(string(player_scaling_x) + " " + string(view_hborder[0]));
}
//Moves the view further
if(keyboard_check_pressed(vk_pageup) || mouse_wheel_down()) {
    player_scaling_x = min(player_scaling_x + 40, room_width - 320);
    player_scaling_y = player_scaling_x / 4 * 3;
    view_hborder[0] = min(view_hborder[0] + 40, room_width);
    view_vborder[0] = view_hborder[0] / 4 * 3;
    
    show_debug_message(string(player_scaling_x) + " " + string(view_hborder[0]));
}
//Centralize the window
if(keyboard_check(vk_tab)) {
    window_center();
}

player_scaling_x = min(player_scaling_x, room_width - 320);
player_scaling_y = player_scaling_x / 4 * 3;
view_hborder[0] = min(view_hborder[0], room_width);
view_vborder[0] = view_hborder[0] / 4 * 3;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hotkeys

if(keyboard_check_pressed(vk_escape)) {
    if(!global.pause) {
        instance_create(x, y, cnt_MenuBase);
        instance_deactivate_object(cnt_HUDBase);
        global.pause = true;
    }
    else game_end();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room Controller

//current_floor = tile_get_depth(tile);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Window resize
proportion = view_hport[0] / view_wport[0];

if (display_get_height() &lt; view_hport[0]) {
    view_hport[0] = display_get_height();
    view_wport[0] = view_hport[0] / proportion;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
