<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Elements Menu

show_debug_message("cnt_MenuBase start");

//Deactivate all buttons and game HUD
instance_deactivate_object(cnt_HUDBase);

//Current button
cur_x = 2;
cur_y = 1;

//The grid containes information about activated buttons
buttons = ds_grid_create(5, 5);
scr_RestoreButtonsGrid();

//Buttons' coordinates
pos_game_title_x = 2;
pos_game_title_y = 0;
pos_start_x = 2;
pos_start_y = 1;
pos_options_x = 2;
pos_options_y = 2;
pos_exit_x = 2;
pos_exit_y = 3;
pos_continue_x = 1;
pos_continue_y = 1;
pos_new_game_x = 3;
pos_new_game_y = 1;
pos_sound_x = 1;
pos_sound_y = 2;
pos_graphics_x = 1;
pos_graphics_y = 3;
pos_gameplay_x = 3;
pos_gameplay_y = 2;
pos_control_x = 3;
pos_control_y = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu Serfing
if (keyboard_check_pressed(vk_up)) {
    if (ds_grid_get(buttons, cur_x, cur_y - 1) == 2) {
        cur_y--;
    }
    if (cur_x == 2) scr_RestoreButtonsGrid();
}
if (keyboard_check_pressed(vk_down)) {
    if (ds_grid_get(buttons, cur_x, cur_y + 1) == 2) {
        cur_y++;
    }
    if (cur_x == 2) scr_RestoreButtonsGrid();
}
if (keyboard_check_pressed(vk_right)) {
    if (ds_grid_get(buttons, cur_x + 1, cur_y) == 2) {
        cur_x++;
        if (cur_y == 3) cur_y--;
    }
}
if (keyboard_check_pressed(vk_left)) {
    if (ds_grid_get(buttons, cur_x - 1, cur_y) == 2) {
        cur_x--;
        if (cur_y == 3) cur_y--;
    }
    
}
if (keyboard_check_pressed(vk_enter)) {
    if (cur_x == 2) {
        switch(cur_y) {
            case 1: scr_RestoreButtonsGrid();
                    ds_grid_set_region(buttons, 1, 1, 3, 1, 2);
                    break; 
            case 2: scr_RestoreButtonsGrid();
                    ds_grid_set_region(buttons, 1, 2, 3, 3, 2);
                    break; 
            case 3: scr_Exit();
                    break; 
            default: show_message("cnt_MenuBase_Step_2: 35");
        }
    }
    if (cur_x == 1) {
        switch(cur_y) {
            case 1: scr_Continue();
                    break;
        }
    }
    if (cur_x == 3) {
        switch(cur_y) {
            case 1: scr_NewGame();
                    break;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grid Check
if (keyboard_check_pressed(ord("G"))) {
    show_debug_message("-------");
    for(i = 0; i &lt; 5; i++;) {
        show_debug_message(string(ds_grid_get(buttons, 0, i)) +
                           string(ds_grid_get(buttons, 1, i)) +
                           string(ds_grid_get(buttons, 2, i)) +
                           string(ds_grid_get(buttons, 3, i)) +
                           string(ds_grid_get(buttons, 4, i)));
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Refreshing

//Buttons variaty
var_h = ds_grid_height(buttons);
var_w = ds_grid_width(buttons);

//Button size
button_h = sprite_get_height(spr_Start) * global.scale_gui / 3;
button_w = sprite_get_width(spr_Start) * global.scale_gui / 3;

//Interval berween edges
interval = 10 * global.scale_gui;

//Summary height and width of the menu
sum_h = (button_h + interval) * (var_h);
sum_w = (button_w + interval) * (var_w);

//Intervals between centers
interval_h = button_h + interval;
interval_w = button_w + interval;

//First cell coordinates
cell_x = (window_get_width() - sum_w + button_w) / 2;
cell_y = (window_get_height() - sum_h + button_h) / 2 + interval_h;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Background

draw_background_stretched(spr_Black, 0, 0, window_get_width(), window_get_height());
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Game Title

draw_sprite_ext(spr_GameTitle, 0, 
                cell_x + interval_w * pos_game_title_x, 
                cell_y - interval_h, 
                global.scale_gui / 3, 
                global.scale_gui / 3, 
                0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start

if (ds_grid_get(buttons, pos_start_x, pos_start_y) == 2) {
    draw_sprite_ext(spr_Start, 
                    cur_x == pos_start_x &amp;&amp; cur_y == pos_start_y, 
                    cell_x + interval_w * pos_start_x, 
                    cell_y + interval_h * pos_start_y, 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Options

if (ds_grid_get(buttons, pos_options_x, pos_options_y) == 2) {
    draw_sprite_ext(spr_Options, 
                    cur_x == pos_start_x &amp;&amp; cur_y == pos_options_y, 
                    cell_x + interval_w * pos_options_x, 
                    cell_y + interval_h * pos_options_y, 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Exit

if (ds_grid_get(buttons, pos_exit_x, pos_exit_y) == 2) {
    draw_sprite_ext(spr_Exit, 
                    cur_x == pos_exit_x &amp;&amp; cur_y == pos_exit_y, 
                    cell_x + interval_w * pos_exit_x, 
                    cell_y + interval_h * pos_exit_y, 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Continue

if (ds_grid_get(buttons, pos_continue_x, pos_continue_y) == 2) {
    draw_sprite_ext(spr_Continue, 
                    cur_x == pos_continue_x &amp;&amp; cur_y == pos_continue_y, 
                    cell_x + interval_w * pos_continue_x, 
                    cell_y + interval_h * pos_continue_y, 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///New Game

if (ds_grid_get(buttons, pos_new_game_x, pos_new_game_y) == 2) {
    draw_sprite_ext(spr_NewGame, 
                    cur_x == pos_new_game_x &amp;&amp; cur_y == pos_new_game_y, 
                    cell_x + interval_w * pos_new_game_x, 
                    cell_y + interval_h * pos_new_game_y, 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gameplay

if (ds_grid_get(buttons, pos_gameplay_x, pos_gameplay_y) == 2) {
    draw_sprite_ext(spr_Gameplay, 
                    cur_x == pos_gameplay_x &amp;&amp; cur_y == pos_gameplay_y, 
                    cell_x + interval_w * pos_gameplay_x, 
                    cell_y + interval_h * (pos_gameplay_y - 0.5), 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control

if (ds_grid_get(buttons, pos_control_x, pos_control_y) == 2) {
    draw_sprite_ext(spr_Control, 
                    cur_x == pos_control_x &amp;&amp; cur_y == pos_control_y, 
                    cell_x + interval_w * pos_control_x, 
                    cell_y + interval_h * (pos_control_y - 0.5), 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Graphics

if (ds_grid_get(buttons, pos_graphics_x, pos_graphics_y) == 2) {
    draw_sprite_ext(spr_Graphics, 
                    cur_x == pos_graphics_x &amp;&amp; cur_y == pos_graphics_y, 
                    cell_x + interval_w * pos_graphics_x, 
                    cell_y + interval_h * (pos_graphics_y - 0.5), 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sound

if (ds_grid_get(buttons, pos_sound_x, pos_sound_y) == 2) {
    draw_sprite_ext(spr_Sound, 
                    cur_x == pos_sound_x &amp;&amp; cur_y == pos_sound_y, 
                    cell_x + interval_w * pos_sound_x, 
                    cell_y + interval_h * (pos_sound_y - 0.5), 
                    global.scale_gui / 3, 
                    global.scale_gui / 3, 
                    0, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
