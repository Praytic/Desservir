<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Hero_DownStand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0.1;
action = false;
stepsMade = 0;
cur_depth = 0;
prev_depth = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.pause</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth Correction
depth = phy_position_y * -1
if (cur_depth != - 100)
    prev_depth = cur_depth;
if (cur_depth == -100 &amp;&amp; prev_depth == 0) {
    depth *= -1;
}
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Input Logic

cell_x = round(x / 16);
cell_y = round(y / 16);

cur_depth   = ds_grid_get(cnt_RoomState.room_grid, cell_x, cell_y);
right_depth = ds_grid_get(cnt_RoomState.room_grid, cell_x + 1, cell_y);
left_depth  = ds_grid_get(cnt_RoomState.room_grid, cell_x - 1, cell_y);
up_depth    = ds_grid_get(cnt_RoomState.room_grid, cell_x, cell_y - 1);
down_depth  = ds_grid_get(cnt_RoomState.room_grid, cell_x, cell_y + 1);

if(keyboard_check(vk_left)){
    sprite_index = spr_Hero_Left;
    if (abs(cur_depth - left_depth) &lt;= 1 || 
        left_depth == -100 ||
        left_depth == prev_depth) {
        phy_position_x -= 1;
    }
    stepsMade++;
}
if(keyboard_check(vk_right)){
    sprite_index = spr_Hero_Right;
    if (abs(cur_depth - right_depth) &lt;= 1 || 
        right_depth == -100 ||
        right_depth == prev_depth) {
        phy_position_x += 1;
    }
    stepsMade++;
}
if(keyboard_check(vk_up)){
    sprite_index = spr_Hero_Up;
    if (abs(cur_depth - up_depth) &lt;= 1 || 
        up_depth == -100 ||
        up_depth == prev_depth) {
        phy_position_y -= 1;
    }
    stepsMade++;
}
if(keyboard_check(vk_down)){
    sprite_index = spr_Hero_Down;
    if (abs(cur_depth - down_depth) &lt;= 1 || 
        down_depth == -100 ||
        down_depth == prev_depth) {
        phy_position_y += 1;
    }
    stepsMade++;
}

//Stand animation
if(keyboard_check_released(vk_left)){
    sprite_index = spr_Hero_LeftStand;
}
if(keyboard_check_released(vk_right)){
    sprite_index = spr_Hero_RightStand;
}
if(keyboard_check_released(vk_up)){
    sprite_index = spr_Hero_UpStand;
}
if(keyboard_check_released(vk_down)){
    sprite_index = spr_Hero_DownStand;
}

if(keyboard_check(ord("E"))) {
    action = true;
}
else {
    action = false;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(ord("G"))) {
    show_debug_message("cell: " + string(cell_x) + " " + string(cell_y));
    show_debug_message("-------");
    for(i = 0; i &lt; 5; i++;) {
        show_debug_message(string(ds_grid_get(cnt_RoomState.room_grid, cell_x - 2, cell_y - 2 + i)) + " " +
                           string(ds_grid_get(cnt_RoomState.room_grid, cell_x - 1, cell_y - 2 + i)) + " " +
                           string(ds_grid_get(cnt_RoomState.room_grid, cell_x - 0, cell_y - 2 + i)) + " " +
                           string(ds_grid_get(cnt_RoomState.room_grid, cell_x + 1, cell_y - 2 + i)) + " " +
                           string(ds_grid_get(cnt_RoomState.room_grid, cell_x + 2, cell_y - 2 + i)));
    }
    show_debug_message("-------");
    show_debug_message(string(cur_depth) + " " + string(prev_depth));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="base_Middle">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="cnt_Collision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Tree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AoE
draw_self();
draw_circle(x, y - 16, 32, 3);
draw_set_halign(fa_center);
draw_text_ext_transformed(x, y - 32, string(x) + ", " + string(y), 10, 300, 0.5, 0.5, 0);
draw_text_ext_transformed(x, y - 48, string(stepsMade), 10, 300, 0.5, 0.5, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,40</point>
    <point>10,32</point>
  </PhysicsShapePoints>
</object>
